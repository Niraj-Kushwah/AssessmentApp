{"ast":null,"code":"var _jsxFileName = \"/home/webwerks/Desktop/React-Project/AssessmentApp/livestreamingfront/src/Playvideo.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar video = {\n  objectFit: \"cover\",\n  width: \"100vw\",\n  height: \"100vh\",\n  position: \"fixed\",\n  top: \"0\",\n  left: \"0\"\n};\n\nfunction Playvideo() {\n  _s();\n\n  let [videoName, setvideoName] = useState();\n  let params = useParams();\n  useEffect(() => {\n    let allvideoname = \"http://localhost:5000/api/playvideo?filename=\" + params.vname;\n    axios({\n      url: allvideoname,\n      method: \"get\"\n    }).then(response => {\n      console.log(\"response from api\", response);\n      setvideoName(response.data);\n    }, error => {\n      console.log(\"error from api\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      style: video,\n      controls: true,\n      autoPlay: true,\n      loop: true,\n      data: videoName,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"http://localhost:5000/\" + params.vname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Playvideo, \"D9YP+flFuCc+8uC97/2tZFSw524=\", false, function () {\n  return [useParams];\n});\n\n_c = Playvideo;\nexport default Playvideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playvideo\");","map":{"version":3,"sources":["/home/webwerks/Desktop/React-Project/AssessmentApp/livestreamingfront/src/Playvideo.js"],"names":["useParams","Link","useEffect","useState","axios","ReactPlayer","video","objectFit","width","height","position","top","left","Playvideo","videoName","setvideoName","params","allvideoname","vname","url","method","then","response","console","log","data","error"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,SAAQC,SAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AACA,IAAIC,KAAK,GAAE;AACPC,EAAAA,SAAS,EAAE,OADJ;AAEPC,EAAAA,KAAK,EAAE,OAFA;AAGPC,EAAAA,MAAM,EAAE,OAHD;AAIPC,EAAAA,QAAQ,EAAE,OAJH;AAKPC,EAAAA,GAAG,EAAE,GALE;AAMPC,EAAAA,IAAI,EAAE;AANC,CAAX;;AASA,SAASC,SAAT,GACA;AAAA;;AACI,MAAG,CAACC,SAAD,EAAWC,YAAX,IAAyBZ,QAAQ,EAApC;AACA,MAAKa,MAAM,GAAEhB,SAAS,EAAtB;AACAE,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIe,YAAY,GAAC,kDAAgDD,MAAM,CAACE,KAAxE;AACAd,IAAAA,KAAK,CAAC;AACNe,MAAAA,GAAG,EAACF,YADE;AAENG,MAAAA,MAAM,EAAC;AAFD,KAAD,CAAL,CAIDC,IAJC,CAIKC,QAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,QAAjC;AACAP,MAAAA,YAAY,CAACO,QAAQ,CAACG,IAAV,CAAZ;AACH,KAPG,EAODC,KAAD,IAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BE,KAA7B;AACH,KATG;AAUH,GAZQ,EAYP,EAZO,CAAT;AAcA,sBACI;AAAA,2BACI;AAAO,MAAA,KAAK,EAAEpB,KAAd;AAAqB,MAAA,QAAQ,MAA7B;AAA8B,MAAA,QAAQ,MAAtC;AAAuC,MAAA,IAAI,MAA3C;AAA4C,MAAA,IAAI,EAAEQ,SAAlD;AAAA,6BACO;AAAQ,QAAA,GAAG,EAAE,2BAAyBE,MAAM,CAACE;AAA7C;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzBQL,S;UAGQb,S;;;KAHRa,S;AA2BT,eAAeA,SAAf","sourcesContent":["import { useParams,Link } from \"react-router-dom\"\nimport {useEffect , useState} from \"react\";\nimport axios from 'axios'\nimport ReactPlayer from 'react-player'\nvar video ={\n    objectFit: \"cover\",\n    width: \"100vw\",\n    height: \"100vh\",\n    position: \"fixed\",\n    top: \"0\",\n    left: \"0\"\n  }\n\nfunction Playvideo()\n{\n    let[videoName,setvideoName]=useState()\n    let  params= useParams()\n    useEffect(()=>{\n        let allvideoname=\"http://localhost:5000/api/playvideo?filename=\"+params.vname\n        axios({\n        url:allvideoname,\n        method:\"get\"\n        \n    }).then((response)=>{\n        console.log(\"response from api\" ,response)\n        setvideoName(response.data)\n    },(error)=>{\n        console.log(\"error from api\",error)\n    })\n    },[])\n\n    return(\n        <div>\n            <video style={video} controls autoPlay loop data={videoName}>\n                   <source src={\"http://localhost:5000/\"+params.vname}></source>\n                </video>\n        </div>\n    )\n}\n\nexport default Playvideo"]},"metadata":{},"sourceType":"module"}